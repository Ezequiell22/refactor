unit refactor.model.DAO.user;

interface

uses
  refactor.model.DAO.interfaces,
  refactor.model.entity.user,
  Data.DB,
  refactor.model.components.connections.interfaces;

type
  TModelDAOUser = class(TinterfacedObject, iModelDAOEntity<TUser>)
  private
    FConnection: iModelComponentsConnections;
    FDataSource: TDataSource;
    FEntity: TUser;
  public
    constructor create;
    destructor destroy; override;
    class function New: iModelDAOEntity<TUser>;
    function Delete: iModelDAOEntity<TUser>;
    function DataSet(AValue: TDataSource): iModelDAOEntity<TUser>;
    function Get: iModelDAOEntity<TUser>;
    function Insert: iModelDAOEntity<TUser>;
    function This: TUser;
    function Update: iModelDAOEntity<TUser>;
  end;

implementation

{ TModelDAOUser }

constructor TModelDAOUser.create;
begin

end;

function TModelDAOUser.DataSet(AValue: TDataSource): iModelDAOEntity<TUser>;
begin

end;

function TModelDAOUser.Delete: iModelDAOEntity<TUser>;
begin

end;

destructor TModelDAOUser.destroy;
begin

  inherited;
end;

function TModelDAOUser.Get: iModelDAOEntity<TUser>;
begin

end;

function TModelDAOUser.Insert: iModelDAOEntity<TUser>;
begin

end;

class function TModelDAOUser.New: iModelDAOEntity<TUser>;
begin

end;

function TModelDAOUser.This: TUser;
begin

end;

function TModelDAOUser.Update: iModelDAOEntity<TUser>;
begin

end;

end.
